plugins {
    id 'java'
    id 'org.springframework.boot' version '3.+'
    id 'io.spring.dependency-management' version '1.+'
    id "io.github.kobylynskyi.graphql.codegen" version "5.+"
    id "org.sonarqube" version "5.+"
    id "jacoco"
}

group = 'de.unistuttgart.iste.meitrex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

def jacocoEnabled = System.properties.getProperty("jacocoEnabled") ?: "true"

// Apply JaCoCo settings only if jacaco is enable
if (jacocoEnabled.toBoolean()) {
    project.logger.lifecycle('Applying jacoco settings from jacoco.gradle')
    apply from: rootProject.file("jacoco.gradle")
}

sonarqube {
    properties {
        property("sonar.projectKey", "MEITREX_dinodev_gropius_adapter")
        property("sonar.organization", "meitrex")
        property("sonar.host.url", "https://sonarcloud.io")
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'de.unistuttgart.iste.meitrex:meitrex-common:1.2'
    implementation 'de.unistuttgart.iste.meitrex:dinodev_common:1.2'
    implementation 'de.unistuttgart.iste.meitrex:gamification_engine:1.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.modelmapper:modelmapper:3.+'
    implementation 'com.graphql-java:graphql-java-extended-scalars:22.0'
    implementation 'com.graphql-java:graphql-java-extended-validation:22.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'org.hamcrest:hamcrest:2.+'
    testImplementation "org.testcontainers:junit-jupiter:1.+"
}

tasks.named('test') {
    useJUnitPlatform()
}